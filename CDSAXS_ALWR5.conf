#Diffractometer parameters:
sample_circles = 2 #number of sample rotation circles
sample_axis   = ["spinner", "srot"] #name of the sample rotation motors, from inner-most to outer-most -- important
rot_dir       = ["x+", "z-"]   #S#79 #direction of rotation of each axis, following the same order as in sample_axis, using right-handed rules. X along the beam, Z upward

#Allowed Symmetry operators = ['1','1~','2(x)','2(y)','2(z)','2(110)','3(z)','3(111)','4(x)','4(y)','4(z)','4(z)~','m(x)','m(y)','m(z)']
run_all = 1     #if 0: only Run initialisation is done and show Qmax
gpu_enable  = 1 #if 0: Cython version will be used
use_all_gpu = 0 #if 0: specify the platform and device id to be used, if 1: all gpu available will be used
platform_id = 0
device_id   = 0
image_extension = "edf"
maskFile = "newDetMask.cbf"
in_plane_dir = [0,0,-1]
out_plane_dir= [0,-1,0]
UB_rotation_dir = "z+"
UB_rotation_angle = 0.8 #Angle of rotation of the UB matrix, degree

interpolation_number = 1
symmetry_operators = ['m(x)']#['m(x)', 'm(y)', 'm(z)']
scale_factor = 100 #To amplify the slicing intensity, this makes the image rendering better, but not really needed.
number_of_run = 2 #Number of run to be merged together
scanning_motor= ["spinner"]*2#["spinner", "spinner"] #["srot"] #Each run corresponds to one scan of this motor (circle)


img_folder = "D:\CEA\CDSAXS-072018\CCD"
img_prefix = "ALWR5_"
img_digit  = 4
poni_files =["poni/detdy13_detdz9731.poni", "poni/detdy13_detdz9531.poni"]
img_begin = [325, 638]#
img_end   = [525, 838]#
phi_step  = [0.01, 0.01]


################# Making volume ####################################
making_volume= 0
number_of_volume=1
cube_dim = 257
volume_extent = [0.17]
volume_center = [[0, 0, 0]]
volume_outname = ["Reconstructed/ALWR5_spinner.cmap"]

################# Making shell #####################################
making_shell = 0
number_of_shell = 8
shell_dim    = 257
shell_extent = 3.8
shell_center = [0,0,0]
shell_radius    = [2.0, 1.55, 2.056, 2.12, 2.248, 2.983, 3.06, 3.379]
shell_thickness = 0.02
shell_outname = [""]

##################Slicing parameters ##############################
making_slice = 1
slice_dim = 2500
number_of_slice = 1
#### Please input the follow parameters in a list, one parameter for one slice: vector_H1, vector_H2, vector_offset, slice_thickness, slice_extent_1, slice_extent_2, slice_outname
vector_H1 = [[1,0,0], [0,1,0]]
vector_H2 = [[0,0,1], [0,0,1]]
vector_offset = [[0,0,0], [0,0,0]]

slice_thickness = [0.005, 0.005]
slice_extent_1 = [0.17, 0.17]
slice_extent_2 = [0.17, 0.17]
slice_outname = ["Reconstructed/ALWR5_Qxz_mx.cbf"]

################# Making pole figure #####################################

making_pole_figure = 0
pole_size = 300
lab_rotation_axis = "z"
use_custom_projection_plane = False #if False, the pole figure will be projected on the plane normal to the crystal rotation axis
custom_projection_plane_normal = [0,0,1]
number_of_figure = 101
pole_radius = np.linspace(1.0, 3.8, number_of_figure)
pole_thickness = 0.02
pole_name = ["PtSi/PF_q%.4f.cbf"%r for r in pole_radius]

################################## MISC ###############################################
pol_degree = 0.98 # polarisation degree
normal_to_pol = [0, 0, 1] # normal to polarisation plane. At the Synchrotron, the polarisation plane is horizontal
##################### Detector disposition (ROW matrix) ###############################
###### Maxipix on BM05: Horizontal position = MD3, vertical position = MD6 ############
MD0 = np.array([[1, 0], [0, 1]  ], dtype=np.int32)
MD1 = np.array([[-1, 0], [0, 1] ], dtype=np.int32)
MD2 = np.array([[1, 0], [0, -1] ], dtype=np.int32)
MD3 = np.array([[-1, 0], [0, -1]], dtype=np.int32)
MD4 = np.array([[0, 1], [1, 0]  ], dtype=np.int32)
MD5 = np.array([[0, -1], [1, 0] ], dtype=np.int32)
MD6 = np.array([[0, 1], [-1, 0] ], dtype=np.int32)
MD7 = np.array([[0, -1], [-1, 0]], dtype=np.int32)
MD  = MD3
